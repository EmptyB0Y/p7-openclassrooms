{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://127.0.0.1:3000/api/\";\nexport const GetPosts = topic => {\n  const options = {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem(\"token\")\n    }\n  };\n  return axios.get(BASE_URL + 'posts', {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem(\"token\")\n    },\n    data: {\n      userId: sessionStorage.getItem(\"userId\"),\n      topic: topic\n    }\n  }).then(res => {\n    return res.data;\n  }).catch(err => err);\n};\n_c = GetPosts;\nexport const PostPost = text => {\n  const options = {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem(\"token\")\n    }\n  };\n  const bodyParameters = {\n    userId: sessionStorage.getItem(\"userId\"),\n    post: {\n      content: text\n    }\n  };\n  return axios.post(BASE_URL + 'posts', bodyParameters, options).then(res => console.log(res.data)).catch(err => err);\n};\n_c2 = PostPost;\nexport const DelPost = postId => {\n  console.log(\"post id : \" + postId);\n  return axios.delete(BASE_URL + 'posts/' + postId + \"\", {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem(\"token\")\n    },\n    data: {\n      userId: sessionStorage.getItem(\"userId\")\n    }\n  }).then(res => console.log(res.data)).catch(err => err);\n};\n_c3 = DelPost;\nexport const LikePost = (postId, like) => {\n  const options = {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem(\"token\")\n    }\n  };\n  const bodyParameters = {\n    userId: sessionStorage.getItem(\"userId\"),\n    like: like\n  };\n  return axios.post(BASE_URL + 'posts/' + postId + \"/like\", bodyParameters, options).then(res => console.log(res.data)).catch(err => err);\n};\n_c4 = LikePost;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetPosts\");\n$RefreshReg$(_c2, \"PostPost\");\n$RefreshReg$(_c3, \"DelPost\");\n$RefreshReg$(_c4, \"LikePost\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/services/posts.service.js"],"names":["axios","BASE_URL","GetPosts","topic","options","headers","Authorization","sessionStorage","getItem","get","data","userId","then","res","catch","err","PostPost","text","bodyParameters","post","content","console","log","DelPost","postId","delete","LikePost","like"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://127.0.0.1:3000/api/\"\r\n\r\nexport const GetPosts = (topic) => {\r\n  const options = {\r\n      headers: { Authorization: 'Bearer '+sessionStorage.getItem(\"token\") }\r\n  };\r\n  \r\n  return axios.get(BASE_URL + 'posts',{\r\n    headers: { Authorization: 'Bearer '+sessionStorage.getItem(\"token\") },\r\n    data:{\r\n        userId : sessionStorage.getItem(\"userId\"),\r\n        topic: topic\r\n       }\r\n      })\r\n      .then((res) => {return res.data;})\r\n      .catch((err) => err)\r\n}\r\n\r\nexport const PostPost = (text) => {\r\n\r\n  const options = {\r\n    headers:{\r\n    Authorization: 'Bearer '+sessionStorage.getItem(\"token\")\r\n  }\r\n};\r\nconst bodyParameters = {\r\n    userId : sessionStorage.getItem(\"userId\"),\r\n    post: {content: text}\r\n};\r\n  \r\n  return axios.post(BASE_URL + 'posts',bodyParameters,options)\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => err)\r\n}\r\n\r\nexport const DelPost = (postId) =>{\r\n\r\n  console.log(\"post id : \"+postId);\r\n  return axios.delete(BASE_URL + 'posts/'+postId+\"\",{\r\n      headers: { Authorization: 'Bearer '+sessionStorage.getItem(\"token\") },\r\n      data:{\r\n          userId : sessionStorage.getItem(\"userId\")\r\n      }\r\n  })\r\n  .then((res) => console.log(res.data))\r\n  .catch((err) => err)\r\n}\r\n\r\nexport const LikePost = (postId,like) => {\r\n\r\n  const options = {\r\n    headers:{\r\n    Authorization: 'Bearer '+sessionStorage.getItem(\"token\")\r\n  }\r\n};\r\nconst bodyParameters = {\r\n    userId : sessionStorage.getItem(\"userId\"),\r\n    like: like\r\n};\r\n  \r\n  return axios.post(BASE_URL + 'posts/'+postId+\"/like\",bodyParameters,options)\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => err)\r\n}"]},"metadata":{},"sourceType":"module"}