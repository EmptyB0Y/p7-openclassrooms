{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\GifSearch.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/GifSearch.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GifSearch = place => {\n  _s();\n\n  const [gifs, setGifs] = useState([]);\n  const [term, updateTerm] = useState('');\n  const [iterations, setIterations] = useState(10);\n  useEffect(() => {\n    fetchGifs().then(() => {\n      gifs.map(gif => {\n        console.log(gif);\n      });\n    });\n  }, [term]);\n\n  async function fetchGifs() {\n    try {\n      const API_KEY = 'EP7RKmRrQ1bMjBgJAFIR01e0FLIh7ds8';\n      const BASE_URL = 'http://api.giphy.com/v1/gifs/search';\n      fetch(`${BASE_URL}?api_key=${API_KEY}&q=${term}`).then(resJson => {\n        resJson.json().then(res => {\n          setGifs(res.data);\n        });\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  function handleGifSearch(e) {\n    let newTerm = e.target.value;\n    updateTerm(newTerm);\n  }\n\n  function handleClickLoadMore() {\n    setIterations(iterations + 10);\n  }\n\n  function handleClickCloseGifs() {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), document.getElementById('gif-anchor-' + place.place));\n  }\n\n  function handleClickGif(e) {\n    if (place.place !== 'addpost') {\n      document.getElementById('comment-input-' + place.place).value += \" :\" + e.target.src + \":\";\n    } else {\n      document.getElementById('addpost-input').value += \" :\" + e.target.src + \":\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gif-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-search-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"gif-search-input\",\n        onInput: e => handleGifSearch(e),\n        width: \"20\",\n        height: \"20\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"gif-close\",\n        onClick: handleClickCloseGifs,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"gif-list\",\n      children: gifs.slice(0, iterations).map(gif => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"gif\",\n        onClick: e => handleClickGif(e),\n        id: gif.id,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif.images.fixed_height.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"load-gifs-button\",\n      onClick: handleClickLoadMore,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GifSearch, \"vJSCKe9/KEG5fTkZI++PG85Jgag=\");\n\n_c = GifSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifSearch\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/GifSearch.js"],"names":["React","useEffect","useState","ReactDOM","GifSearch","place","gifs","setGifs","term","updateTerm","iterations","setIterations","fetchGifs","then","map","gif","console","log","API_KEY","BASE_URL","fetch","resJson","json","res","data","error","warn","handleGifSearch","e","newTerm","target","value","handleClickLoadMore","handleClickCloseGifs","render","document","getElementById","handleClickGif","src","slice","id","images","fixed_height","url"],"mappings":"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","sourcesContent":["import '../styles/GifSearch.css'\r\nimport React, {useEffect, useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport const GifSearch = (place) =>{\r\n\r\n    const [gifs, setGifs] = useState([]);\r\n    const [term, updateTerm] = useState('');\r\n    const [iterations,setIterations] = useState(10);\r\n\r\n    useEffect(()=>{\r\n        fetchGifs().then(()=>{\r\n            gifs.map((gif)=>{\r\n                console.log(gif);\r\n            })\r\n        });\r\n      \r\n    },[term]);\r\n\r\n    async function fetchGifs() {\r\n        try {\r\n        const API_KEY = 'EP7RKmRrQ1bMjBgJAFIR01e0FLIh7ds8';\r\n        const BASE_URL = 'http://api.giphy.com/v1/gifs/search';\r\n        fetch(`${BASE_URL}?api_key=${API_KEY}&q=${term}`)\r\n        .then((resJson)=>{\r\n            resJson.json().then((res)=>{\r\n                setGifs(res.data);\r\n            });\r\n        });\r\n        } catch (error) {\r\n        console.warn(error);\r\n        }\r\n    }\r\n\r\n    function handleGifSearch(e) {\r\n        let newTerm = e.target.value;\r\n        updateTerm(newTerm);\r\n    }\r\n\r\n    function handleClickLoadMore(){\r\n        setIterations(iterations+10);\r\n    }\r\n\r\n    function handleClickCloseGifs(){\r\n        ReactDOM.render(<></>, document.getElementById('gif-anchor-'+place.place));\r\n    }\r\n\r\n    function handleClickGif(e){\r\n        if(place.place !== 'addpost'){\r\n            document.getElementById('comment-input-'+place.place).value += \" :\"+e.target.src+\":\";\r\n        }\r\n        else{\r\n            document.getElementById('addpost-input').value += \" :\"+e.target.src+\":\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='gif-search'>\r\n            <div className='gif-search-top'>\r\n                <input className='gif-search-input' onInput={(e) => handleGifSearch(e)} width='20' height='20' multiple/>\r\n                <a className='gif-close' onClick={handleClickCloseGifs}>X</a>\r\n            </div>\r\n            <ul className='gif-list'>\r\n                {gifs.slice(0,iterations).map((gif)=>\r\n                    <li className='gif' onClick={(e)=>handleClickGif(e)} id={gif.id} key={gif.id}>\r\n                        <img src={gif.images.fixed_height.url}></img>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <button className='load-gifs-button' onClick={handleClickLoadMore}>+</button>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}