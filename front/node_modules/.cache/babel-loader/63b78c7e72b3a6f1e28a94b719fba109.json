{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport like from '../assets/Icons/like.png';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { GetComments } from '../services/comments.service';\nimport { AddComment } from '../services/comments.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = id => {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    GetComments(id).then(data => setCommconsoents(data)).catch(err => console.log(err));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  } else if (comments.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commments-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"No comments yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commments-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-frame\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array(comments).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"comment\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [comment.author, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this), comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n  /*console.log(comments);\r\n  console.log(typeof comments);\r\n  return(<div><p>.</p></div>)*/\n};\n\n_s(Comments, \"GXpMmQD+uNXadva2hMMm9HcqXxI=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/Comments.js"],"names":["like","useState","useEffect","useRef","useCallback","GetComments","AddComment","Comments","id","isLoading","setLoading","comments","setComments","then","data","setCommconsoents","catch","err","console","log","length","Array","map","comment","author","text","_id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,EAAD,IAAQ;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,CAACG,EAAD,CAAX,CACCK,IADD,CACMC,IAAI,IAAIC,gBAAgB,CAACD,IAAD,CAD9B,EAECE,KAFD,CAEQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMF,MAAIR,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK,IAAGE,QAAQ,CAACS,MAAT,IAAmB,CAAtB,EAAwB;AACzB,wBAAQ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BAAmC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,sBAAQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA,kBACCC,KAAK,CAACV,QAAD,CAAL,CAAgBW,GAAhB,CAAqBC,OAAD,iBACjB;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,iCACI;AAAA,uBACKA,OAAO,CAACC,MADb,eAEI;AAAA,4CAAK;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGKD,OAAO,CAACE,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAA6BF,OAAO,CAACG,GAArC;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAeA;AACJ;AACA;AACC,CAlCM;;GAAMnB,Q;;KAAAA,Q","sourcesContent":["import like from '../assets/Icons/like.png'\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\nimport {GetComments} from '../services/comments.service'\r\nimport {AddComment} from '../services/comments.service'\r\n\r\nexport const Comments = (id) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n\r\n      useEffect(() => {\r\n        GetComments(id)\r\n        .then(data => setCommconsoents(data))\r\n        .catch((err) => console.log(err)) \r\n      }, [])\r\n\r\n    if (isLoading) {\r\n        return <h1>LOADING...</h1>\r\n    }\r\n    else if(comments.length == 0){\r\n        return (<div className='commments-content'><p className='no-comments'>No comments yet...</p></div>)\r\n    }\r\n    return (<div className='commments-content'>\r\n        <div className='comments-frame'>\r\n            <ul>\r\n            {Array(comments).map((comment) =>\r\n                <li className='comment' key={comment._id}>\r\n                    <div>\r\n                        {comment.author}\r\n                        <p> :<br></br></p>\r\n                        {comment.text}\r\n                    </div>\r\n                </li>)}\r\n            </ul>\r\n        </div>\r\n    </div>)\r\n    \r\n    /*console.log(comments);\r\n    console.log(typeof comments);\r\n    return(<div><p>.</p></div>)*/\r\n}"]},"metadata":{},"sourceType":"module"}