{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport Trash from '../assets/Icons/Trash.webp';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { GetComments, PostComment } from '../services/comments.service';\nimport { SearchProfiles } from '../services/profiles.service';\nimport { Profile } from './Profile';\nimport { Top } from './Top';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = id => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [change, setChange] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [profiles, setProfiles] = useState({});\n\n  let commentsElement = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 28\n  }, this);\n\n  const getFirstname = userId => {\n    if (profiles[userId] !== undefined) {\n      return profiles[userId].firstname;\n    }\n\n    return \"Loading...\";\n  };\n\n  const getLastname = userId => {\n    if (profiles[userId] !== undefined) {\n      return profiles[userId].lastname;\n    }\n\n    return \"\";\n  };\n\n  const getProfilePic = userId => {\n    if (profiles[userId] !== undefined) {\n      return profiles[userId].pictureUrl;\n    }\n\n    return \"\";\n  };\n\n  const refresh = () => {\n    setChange(true);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let text = e.target['input'].value;\n    e.target['input'].value = \"\";\n    PostComment(id.id, text).then(() => {\n      refresh();\n    });\n  };\n\n  const handleClick = (e, profileId) => {\n    e.preventDefault();\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n    setTimeout(() => {\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {\n          id: profileId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), document.getElementById('root'));\n    }, 100);\n  };\n\n  const handleClickDelete = e => {\n    console.log(document.getElementByIde.target);\n  };\n\n  useEffect(() => {\n    GetComments(id).then(data => {\n      setComments(data);\n    }).catch(err => console.log(err));\n  }, [change]);\n  useEffect(() => {\n    let authorUserIds = [];\n\n    for (let i = 0; i < comments.length; i++) {\n      if (!authorUserIds.includes(comments[i].author)) {\n        authorUserIds.push(comments[i].author);\n      }\n    }\n\n    SearchProfiles(authorUserIds).then(data => {\n      setProfiles(data);\n\n      if (comments.length > 0) {\n        setLoad(true);\n      }\n    }).catch(err => console.log(err));\n  }, [comments]);\n\n  if (load) {\n    let deleteCommentElement = {};\n    deleteCommentElement[sessionStorage.getItem(\"userId\")] = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-comment\",\n      onClick: e => handleClickDelete(e),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"delete-comment-icon\",\n        src: Trash,\n        width: \"10\",\n        height: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 140\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 67\n    }, this);\n    commentsElement = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment\",\n        id: comment._id,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"comment-profile-picture\",\n          src: getProfilePic(comment.author)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"comment-author\",\n            onClick: e => handleClick(e, comment.author),\n            children: [getFirstname(comment.author), \" \", getLastname(comment.author)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), \"~\", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), deleteCommentElement[comment.author]]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (comments.length === 0) {\n    commentsElement = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 28\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commments-frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-frame-content\",\n      children: commentsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          handleSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"input\",\n          className: \"add-comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-comment-button\",\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"cypH1nGrKd36csIK9YwURPNLvC8=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/Comments.js"],"names":["Trash","useState","useEffect","useRef","useCallback","GetComments","PostComment","SearchProfiles","Profile","Top","ReactDOM","Comments","id","comments","setComments","change","setChange","load","setLoad","profiles","setProfiles","commentsElement","getFirstname","userId","undefined","firstname","getLastname","lastname","getProfilePic","pictureUrl","refresh","handleSubmit","e","preventDefault","text","target","value","then","handleClick","profileId","render","document","getElementById","setTimeout","handleClickDelete","console","log","getElementByIde","data","catch","err","authorUserIds","i","length","includes","author","push","deleteCommentElement","sessionStorage","getItem","map","comment","_id"],"mappings":"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","sourcesContent":["import Trash from '../assets/Icons/Trash.webp'\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\nimport {GetComments,PostComment} from '../services/comments.service'\r\nimport {SearchProfiles} from '../services/profiles.service'\r\nimport {Profile} from './Profile'\r\nimport { Top } from './Top'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport const Comments = (id) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [change, setChange] = useState(false);\r\n    const [load,setLoad] = useState(false);\r\n    const [profiles, setProfiles] = useState({});\r\n\r\n    let commentsElement = (<p>Loading...</p>);\r\n\r\n    const getFirstname = (userId) =>{\r\n        if(profiles[userId] !== undefined){\r\n            return profiles[userId].firstname;\r\n        }\r\n        return(\"Loading...\");\r\n    }\r\n\r\n    const getLastname = (userId) =>{\r\n        if(profiles[userId] !== undefined){\r\n            return profiles[userId].lastname;\r\n        }\r\n        return(\"\");\r\n    }\r\n\r\n    const getProfilePic = (userId) =>{\r\n        if(profiles[userId] !== undefined){\r\n            return profiles[userId].pictureUrl;\r\n        }\r\n        return(\"\");\r\n    }\r\n\r\n    const refresh = () => {\r\n        setChange(true);\r\n      }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let text = e.target['input'].value; \r\n        e.target['input'].value = \"\";\r\n        PostComment(id.id,text)\r\n        .then(() => { refresh()});\r\n    }\r\n\r\n    const handleClick = (e,profileId) => {\r\n        e.preventDefault();\r\n        ReactDOM.render(\r\n            <div>\r\n            </div>,\r\n              document.getElementById('root')\r\n        );\r\n        setTimeout(() => {\r\n            ReactDOM.render(\r\n                <div>\r\n                    <Top />\r\n                    <Profile id={profileId} />\r\n                </div>,\r\n                  document.getElementById('root')\r\n            );\r\n          }, 100);\r\n\r\n    }\r\n    const handleClickDelete = (e) => {\r\n        console.log(document.getElementByIde.target);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetComments(id)\r\n        .then(data => {\r\n            setComments(data);\r\n        })\r\n        .catch((err) => console.log(err)) \r\n      }, [change]);\r\n\r\n      useEffect(() => {\r\n        let authorUserIds = []\r\n        for(let i = 0; i < comments.length; i++){\r\n            if(!(authorUserIds.includes(comments[i].author))){\r\n                authorUserIds.push(comments[i].author);\r\n            }\r\n        }\r\n\r\n        SearchProfiles(authorUserIds)\r\n        .then(data => {\r\n            setProfiles(data);\r\n            if(comments.length > 0){\r\n                setLoad(true);\r\n            }       \r\n         })\r\n        .catch((err) => console.log(err));\r\n      }, [comments]);\r\n    \r\n    if(load){\r\n        let deleteCommentElement = {};\r\n        deleteCommentElement[sessionStorage.getItem(\"userId\")] = (<button className='delete-comment' onClick={(e) => handleClickDelete(e)}><img className='delete-comment-icon' src={Trash} width='10' height='10'></img></button>);\r\n        commentsElement = (\r\n            <ul>\r\n            {comments.map((comment) =>\r\n                <li className='comment' key={comment._id} id={comment._id}>\r\n                    <img className='comment-profile-picture' src={getProfilePic(comment.author)}></img>\r\n                    <div className='comment-content'>\r\n                        <a href='#' className='comment-author' onClick={(e) => handleClick(e,comment.author)}>{getFirstname(comment.author)} {getLastname(comment.author)}</a>~\r\n                        {comment.text}\r\n                    </div>\r\n                    {deleteCommentElement[comment.author]}\r\n                </li>)}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n    if(comments.length === 0){\r\n        commentsElement = (<p>No comments yet...</p>);\r\n    }\r\n\r\n    return (\r\n    <div className='commments-frame'>\r\n        <div className='comments-frame-content'>\r\n            {commentsElement}\r\n        </div>\r\n        <div className='add-comment'>\r\n            <form onSubmit={(e) => {handleSubmit(e)}}>\r\n                <input name='input' className='add-comment-input'></input>\r\n                <button className='add-comment-button'>post</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}