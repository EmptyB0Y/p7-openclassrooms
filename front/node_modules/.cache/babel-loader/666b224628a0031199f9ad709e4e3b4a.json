{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\GifSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { View, TextInput, StyleSheet, FlatList, Image } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GifSearch = () => {\n  _s();\n\n  const [gifs, setGifs] = useState([]);\n  const [term, updateTerm] = useState('');\n  useEffect(() => {\n    fetchGifs();\n  }, []);\n\n  async function fetchGifs() {\n    try {\n      const API_KEY = 'EP7RKmRrQ1bMjBgJAFIR01e0FLIh7ds8';\n      const BASE_URL = 'http://api.giphy.com/v1/gifs/search';\n      fetch(`${BASE_URL}?api_key=${API_KEY}&q=${term}`).then(resJson => {\n        console.log(resJson.body);\n        resJson.json().then(res => {\n          console.log(res);\n          setGifs(res.data);\n        });\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  function onGifSearch(e) {\n    let newTerm = e.target.value;\n    updateTerm(newTerm);\n    fetchGifs();\n  }\n\n  const styles = StyleSheet.create({\n    view: {\n      flex: 1,\n      alignItems: 'center',\n      padding: 10,\n      backgroundColor: 'darkblue'\n    },\n    textInput: {\n      width: '100%',\n      height: 50,\n      color: 'white'\n    },\n    image: {\n      width: 300,\n      height: 150,\n      borderWidth: 3,\n      marginBottom: 5\n    }\n  });\n  return (\n    /*#__PURE__*/\n    //<input type='file' id='upload' onInput={(e) => handleInputImage(e)} width='20' height='20' multiple/>\n    _jsxDEV(View, {\n      style: styles.view,\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"Search Giphy\",\n        placeholderTextColor: \"#fff\",\n        style: styles.textInput,\n        onChangeText: text => onGifSearch(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n        data: gifs,\n        renderItem: _ref => {\n          let {\n            item\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Image, {\n            resizeMode: \"contain\",\n            style: styles.image,\n            source: {\n              uri: item.images.original.url\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(GifSearch, \"OWUrZZv6r22qagQe3ZsN67WvjZ0=\");\n\n_c = GifSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifSearch\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/GifSearch.js"],"names":["React","useState","View","TextInput","StyleSheet","FlatList","Image","GifSearch","gifs","setGifs","term","updateTerm","useEffect","fetchGifs","API_KEY","BASE_URL","fetch","then","resJson","console","log","body","json","res","data","error","warn","onGifSearch","e","newTerm","target","value","styles","create","view","flex","alignItems","padding","backgroundColor","textInput","width","height","color","image","borderWidth","marginBottom","text","item","uri","images","original","url"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, TextInput, StyleSheet, FlatList, Image} from 'react-native';\r\n\r\nexport const GifSearch = () =>{\r\n\r\n    const [gifs, setGifs] = useState([]);\r\n    const [term, updateTerm] = useState('');\r\n\r\n    useEffect(()=>{\r\n        fetchGifs();\r\n    },[]);\r\n\r\n    async function fetchGifs() {\r\n        try {\r\n        const API_KEY = 'EP7RKmRrQ1bMjBgJAFIR01e0FLIh7ds8';\r\n        const BASE_URL = 'http://api.giphy.com/v1/gifs/search';\r\n        fetch(`${BASE_URL}?api_key=${API_KEY}&q=${term}`).then((resJson)=>{\r\n            console.log(resJson.body);\r\n            resJson.json().then((res)=>{\r\n                console.log(res);\r\n                setGifs(res.data);\r\n            });\r\n        });\r\n        } catch (error) {\r\n        console.warn(error);\r\n        }\r\n    }\r\n\r\n    function onGifSearch(e) {\r\n        let newTerm = e.target.value;\r\n        updateTerm(newTerm);\r\n        fetchGifs();\r\n    }\r\n\r\n    const styles = StyleSheet.create({\r\n        view: {\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          padding: 10,\r\n          backgroundColor: 'darkblue'\r\n        },\r\n        textInput: {\r\n          width: '100%',\r\n          height: 50,\r\n          color: 'white'\r\n        },\r\n        image: {\r\n          width: 300,\r\n          height: 150,\r\n          borderWidth: 3,\r\n          marginBottom: 5\r\n        },\r\n      });\r\n\r\n    return (\r\n        //<input type='file' id='upload' onInput={(e) => handleInputImage(e)} width='20' height='20' multiple/>\r\n        <View style={styles.view}>\r\n        <TextInput\r\n            placeholder=\"Search Giphy\"\r\n            placeholderTextColor='#fff'\r\n            style={styles.textInput}\r\n            onChangeText={(text) => onGifSearch(text)}\r\n        />\r\n        <FlatList\r\n            data={gifs}\r\n            renderItem={({item}) => (\r\n            <Image\r\n                resizeMode='contain'\r\n                style={styles.image}\r\n                source={{uri: item.images.original.url}}\r\n            />\r\n            )}\r\n        />\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}