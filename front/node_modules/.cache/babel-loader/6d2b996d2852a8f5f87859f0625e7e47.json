{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport like from '../assets/Icons/like.png';\nimport nopic from '../assets/Icons/nopic.webp';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { GetComments, PostComment } from '../services/comments.service';\nimport { SearchProfiles } from '../services/profiles.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = id => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [change, setChange] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [profiles, setProfiles] = useState({});\n  let commentsElement;\n\n  const getFirstname = userId => {\n    if (profiles[userId] !== null) {\n      return profiles[userId].firstname;\n    }\n\n    return \"Loading...\";\n  };\n\n  const getLastname = userId => {\n    if (profiles[userId] !== null) {\n      return profiles[userId].lastname;\n    }\n\n    return \"Loading...\";\n  };\n\n  useEffect(() => {\n    setChange(false);\n    GetComments(id).then(data => {\n      setComments(data);\n    }).catch(err => console.log(err));\n  }, [change]);\n  useEffect(() => {\n    let authorUserIds = [];\n\n    for (let i = 0; i < comments.length; i++) {\n      if (!authorUserIds.includes(comments[i].author)) {\n        authorUserIds.push(comments[i].author);\n      }\n    }\n\n    SearchProfiles(authorUserIds).then(data => {\n      setProfiles(data);\n      console.log(\"comments : \");\n      console.log(comments);\n\n      if (comments.length > 0) {\n        setLoad(true);\n      }\n    }).catch(err => console.log(err));\n  }, [comments]);\n\n  if (load) {\n    console.log(\"profiles : \");\n    console.log(profiles);\n    commentsElement = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"comment-profile-picture\",\n          src: nopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              id: \"comment-author\",\n              children: [getFirstname(comment.author), \" \", getLastname(comment.author)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 28\n            }, this), \"~\", comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (comments.length === 0) {\n    commentsElement = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }, this);\n  }\n\n  const refresh = () => {\n    SearchProfiles(authorUserIds).then(data => {\n      setProfiles(data);\n      console.log(\"comments : \");\n      console.log(comments);\n\n      if (comments.length > 0) {\n        setLoad(true);\n      }\n    }).catch(err => console.log(err));\n    setChange(true);\n    /*GetComments(id).then((data) =>{\r\n        setComments(data);\r\n    });*/\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let text = e.target['input'].value;\n    e.target['input'].value = \"\";\n    PostComment(id.id, text).then(() => {\n      refresh(id.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commments-frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-frame-content\",\n      children: commentsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          handleSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"input\",\n          className: \"add-comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-comment-button\",\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"cypH1nGrKd36csIK9YwURPNLvC8=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/Comments.js"],"names":["like","nopic","useState","useEffect","useRef","useCallback","GetComments","PostComment","SearchProfiles","Comments","id","comments","setComments","change","setChange","load","setLoad","profiles","setProfiles","commentsElement","getFirstname","userId","firstname","getLastname","lastname","then","data","catch","err","console","log","authorUserIds","i","length","includes","author","push","map","comment","text","_id","refresh","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import like from '../assets/Icons/like.png'\r\nimport nopic from '../assets/Icons/nopic.webp'\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\nimport {GetComments,PostComment} from '../services/comments.service'\r\nimport {SearchProfiles} from '../services/profiles.service'\r\n\r\nexport const Comments = (id) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [change, setChange] = useState(false);\r\n    const [load,setLoad] = useState(false);\r\n    const [profiles, setProfiles] = useState({});\r\n\r\n    let commentsElement;\r\n\r\n    const getFirstname = (userId) =>{\r\n        if(profiles[userId] !== null){\r\n        return profiles[userId].firstname;\r\n        }\r\n        return(\"Loading...\");\r\n    }\r\n\r\n    const getLastname = (userId) =>{\r\n        if(profiles[userId] !== null){\r\n\r\n        return profiles[userId].lastname;\r\n    }\r\n    return(\"Loading...\");\r\n    }\r\n \r\n    useEffect(() => {\r\n        setChange(false);\r\n        GetComments(id)\r\n        .then(data => {\r\n            setComments(data);\r\n        })\r\n        .catch((err) => console.log(err)) \r\n      }, [change]);\r\n\r\n      useEffect(() => {\r\n        let authorUserIds = []\r\n        for(let i = 0; i < comments.length; i++){\r\n            if(!authorUserIds.includes(comments[i].author)){\r\n                authorUserIds.push(comments[i].author);\r\n            }\r\n        }\r\n\r\n        SearchProfiles(authorUserIds)\r\n        .then(data => {\r\n            setProfiles(data);\r\n            console.log(\"comments : \"); \r\n            console.log(comments);\r\n            if(comments.length > 0){\r\n                setLoad(true);\r\n            }       \r\n         })\r\n        .catch((err) => console.log(err));\r\n      }, [comments]);\r\n\r\n    if(load){\r\n        console.log(\"profiles : \"); \r\n        console.log(profiles);\r\n        commentsElement = (\r\n            <ul>\r\n            {comments.map((comment) =>\r\n                <li className='comment' key={comment._id}>\r\n                    <img className='comment-profile-picture' src={nopic}></img>\r\n                    <div>\r\n                        <p><a href='#' id='comment-author'>{getFirstname(comment.author)} {getLastname(comment.author)}</a>~\r\n                        {comment.text}\r\n                        </p>\r\n                    </div>\r\n                </li>)}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n\r\n    if(comments.length === 0){\r\n        commentsElement = (<p>No comments yet...</p>);\r\n    }\r\n    const refresh = () => {\r\n        SearchProfiles(authorUserIds)\r\n        .then(data => {\r\n            setProfiles(data);\r\n            console.log(\"comments : \"); \r\n            console.log(comments);\r\n            if(comments.length > 0){\r\n                setLoad(true);\r\n            }       \r\n         })\r\n        .catch((err) => console.log(err));\r\n        setChange(true);\r\n        /*GetComments(id).then((data) =>{\r\n            setComments(data);\r\n        });*/\r\n      }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let text = e.target['input'].value; \r\n        e.target['input'].value = \"\";\r\n        PostComment(id.id,text)\r\n        .then(() => { refresh(id.id)});\r\n    }\r\n\r\n    return (\r\n    <div className='commments-frame'>\r\n        <div className='comments-frame-content'>\r\n            {commentsElement}\r\n        </div>\r\n        <div className='add-comment'>\r\n            <form onSubmit={(e) => {handleSubmit(e)}}>\r\n                <input name='input' className='add-comment-input'></input>\r\n                <button className='add-comment-button'>post</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}