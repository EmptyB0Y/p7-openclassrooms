{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/Posts.css';\nimport like from '../assets/Icons/like.png';\nimport dislike from '../assets/Icons/dislike.png';\nimport likeActive from '../assets/Icons/likeActive.png';\nimport dislikeActive from '../assets/Icons/dislikeActive.png';\nimport Trash from '../assets/Icons/Trash.webp';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { GetPosts, DelPost, LikePost } from '../services/posts.service';\nimport { SearchProfiles } from '../services/profiles.service';\nimport { Comments } from './Comments';\nimport { Top } from './Top';\nimport { Profile } from './Profile';\nimport { Banner } from './Banner';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Posts = topic => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [profiles, setProfiles] = useState({});\n  const [iterations, setIterations] = useState(10);\n  const [change, setChange] = useState(false);\n  const liked = {};\n  const disliked = {};\n  liked[false] = like;\n  liked[true] = likeActive;\n  disliked[false] = dislike;\n  disliked[true] = dislikeActive;\n\n  const getImage = post => {\n    if (post.imageUrl !== 'noimage') {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"post-image\",\n        src: post.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  const getAccess = userId => {\n    if (profiles[userId] !== undefined) {\n      return profiles[userId].access;\n    }\n\n    return \"none\";\n  };\n\n  const handleClickAuthor = profileId => {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky\",\n        children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Top, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Profile, {\n        id: profileId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const handleClickLoadMore = () => {\n    setIterations(iterations + 5);\n  };\n\n  const handleClickDelete = e => {\n    let postId = ReactDOM.findDOMNode(e.target).parentNode.id;\n\n    if (postId === '') {\n      postId = ReactDOM.findDOMNode(e.target).parentNode.parentNode.id;\n    }\n\n    DelPost(postId).then(() => {\n      refresh();\n    });\n  };\n\n  const handleClickLike = e => {\n    e.preventDefault();\n    let postId = String(e.target.parentNode.id).substring(5);\n    LikePost(postId, 1).then(() => {\n      refresh();\n    });\n  };\n\n  const handleClickDislike = e => {\n    e.preventDefault();\n    let postId = String(e.target.parentNode.id).substring(8);\n    console.log(postId);\n    LikePost(postId, -1).then(() => {\n      refresh();\n    });\n  };\n\n  const refresh = () => {\n    setChange(!change);\n  };\n\n  const formatContent = text => {\n    const tab = text.split(' ');\n    let content = [];\n    console.log(tab);\n    let string = '';\n\n    for (let i = 0; i < tab.length; i++) {\n      if (tab[i].startsWith(':') && tab[i].endsWith(':')) {\n        content.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this));\n        string = '';\n        content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tab[i].substring(1, tab[i].length - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }, this));\n      } else if (tab[i].split('.').length > 1) {\n        content.push( /*#__PURE__*/_jsxDEV(\"a\", {\n          href: tab[i],\n          children: tab[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }, this));\n      } else {\n        string += ' ' + tab[i];\n      }\n    }\n\n    if (string !== '') {\n      content.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: string\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content.map(el => el)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this);\n  };\n\n  const sortPost = posts => {\n    for (let i = 0; i < posts.length; i++) {\n      console.log(posts[i]);\n    }\n  };\n\n  useEffect(() => {\n    console.log(topic.topic);\n    GetPosts(topic.topic).then(data => setPosts(data.reverse())).catch(err => console.log(err));\n  }, [change]);\n  useEffect(() => {\n    if (posts !== null) {\n      let authorUserIds = [];\n\n      for (let i = 0; i < posts.length; i++) {\n        if (!authorUserIds.includes(posts[i].userId)) {\n          authorUserIds.push(posts[i].userId);\n        }\n      }\n\n      authorUserIds.push(sessionStorage.getItem(\"userId\"));\n      SearchProfiles(authorUserIds).then(data => {\n        setProfiles(data);\n\n        if (posts.length > 0) {\n          setLoad(true);\n        }\n      }).catch(err => console.log(err));\n    }\n  }, [posts]);\n\n  let postsElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\\"Loading...\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 25\n  }, this);\n\n  if (load) {\n    sortPost(posts);\n    let deletePostElement = {};\n    deletePostElement[sessionStorage.getItem(\"userId\")] = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-post\",\n      onClick: e => handleClickDelete(e),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"delete-post-icon\",\n        src: Trash,\n        width: \"10\",\n        height: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 134\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 64\n    }, this);\n\n    if (getAccess(sessionStorage.getItem(\"userId\")) === \"admin\") {\n      for (let i = 0; i < posts.length; i++) {\n        deletePostElement[posts[i].userId] = deletePostElement[sessionStorage.getItem(\"userId\")];\n      }\n    }\n\n    postsElement = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.slice(0, iterations).map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-title-picture-frame\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-title-picture\",\n                src: profiles[post.userId].pictureUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => handleClickAuthor(post.userId),\n              children: [profiles[post.userId].firstname, \" \", profiles[post.userId].lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: post.uid,\n            children: deletePostElement[post.userId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: formatContent(post.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image-frame\",\n          children: getImage(post)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-reviews\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-reviews-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"likes-dislikes\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-like\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  id: 'like-' + post.uid,\n                  onClick: e => handleClickLike(e),\n                  href: \"#\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"like-icon\",\n                    src: liked[post.usersLiked.includes(sessionStorage.getItem(\"userId\"))],\n                    width: \"20\",\n                    height: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 105\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 35\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 238\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-dislike\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  id: 'dislike-' + post.uid,\n                  onClick: e => handleClickDislike(e),\n                  href: \"#\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"dislike-icon\",\n                    src: disliked[post.usersDisliked.includes(sessionStorage.getItem(\"userId\"))],\n                    width: \"20\",\n                    height: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 111\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 35\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.dislikes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 253\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"show-comment\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: e => handleClickComments(post.uid, e),\n                  children: \"comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-section\",\n            id: 'comments-' + post.uid,\n            children: /*#__PURE__*/_jsxDEV(Comments, {\n              id: post.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this)]\n      }, post.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (posts !== null) {\n    if (posts.length === 0) {\n      postsElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No posts yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 28\n      }, this);\n    }\n  }\n\n  let loadElement = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 24\n  }, this);\n\n  if (posts !== null) {\n    if (iterations < posts.length) {\n      loadElement = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"load-more\",\n        onClick: handleClickLoadMore,\n        children: \"LOAD MORE POSTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 28\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-padding\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-content\",\n        children: postsElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), loadElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"UEO/BlwSlAMXTxH+K4etDH8ePWc=\");\n\n_c = Posts;\n\nconst handleClickComments = (postId, e) => {\n  e.preventDefault();\n  let x = document.getElementById(\"comments-\" + postId);\n\n  if (x.style.display === \"none\") {\n    x.style.display = \"block\";\n  } else {\n    x.style.display = \"none\";\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/Posts.js"],"names":["like","dislike","likeActive","dislikeActive","Trash","useState","useEffect","useRef","useCallback","GetPosts","DelPost","LikePost","SearchProfiles","Comments","Top","Profile","Banner","ReactDOM","Posts","topic","posts","setPosts","load","setLoad","profiles","setProfiles","iterations","setIterations","change","setChange","liked","disliked","getImage","post","imageUrl","getAccess","userId","undefined","access","handleClickAuthor","profileId","render","document","getElementById","handleClickLoadMore","handleClickDelete","e","postId","findDOMNode","target","parentNode","id","then","refresh","handleClickLike","preventDefault","String","substring","handleClickDislike","console","log","formatContent","text","tab","split","content","string","i","length","startsWith","endsWith","push","map","el","sortPost","data","reverse","catch","err","authorUserIds","includes","sessionStorage","getItem","postsElement","deletePostElement","slice","pictureUrl","firstname","lastname","uid","usersLiked","likes","usersDisliked","dislikes","handleClickComments","loadElement","x","style","display"],"mappings":"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","sourcesContent":["import '../styles/Posts.css'\r\nimport like from '../assets/Icons/like.png'\r\nimport dislike from '../assets/Icons/dislike.png'\r\nimport likeActive from '../assets/Icons/likeActive.png'\r\nimport dislikeActive from '../assets/Icons/dislikeActive.png'\r\nimport Trash from '../assets/Icons/Trash.webp'\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\nimport {GetPosts,DelPost,LikePost} from '../services/posts.service'\r\nimport {SearchProfiles} from '../services/profiles.service'\r\nimport {Comments} from './Comments'\r\nimport {Top} from './Top'\r\nimport {Profile} from './Profile'\r\nimport {Banner} from './Banner'\r\n\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport const Posts = (topic) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [load,setLoad] = useState(false);\r\n    const [profiles, setProfiles] = useState({});\r\n    const [iterations, setIterations] = useState(10);\r\n    const [change,setChange] = useState(false);\r\n    \r\n    const liked = {};\r\n    const disliked = {};\r\n    \r\n    liked[false] = like;\r\n    liked[true] = likeActive;\r\n    disliked[false] = dislike;\r\n    disliked[true] = dislikeActive;\r\n\r\n    const getImage = (post) =>{\r\n        if(post.imageUrl !== 'noimage'){\r\n            return (<img className='post-image' src={post.imageUrl}></img>);\r\n        }\r\n        else{\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    const getAccess = (userId) =>{\r\n        if(profiles[userId] !== undefined){\r\n            return profiles[userId].access;\r\n        }\r\n        return(\"none\");\r\n    }\r\n\r\n    const handleClickAuthor = (profileId) =>{\r\n        ReactDOM.render(\r\n            <div className='relative'>\r\n                <div className='sticky'>\r\n                    <Banner />\r\n                    <Top />\r\n                </div>\r\n                <Profile id={profileId} />\r\n            </div>,\r\n              document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    const handleClickLoadMore = () => {\r\n        setIterations((iterations+5));\r\n    }\r\n\r\n    const handleClickDelete = (e) => {\r\n        let postId = ReactDOM.findDOMNode(e.target).parentNode.id;\r\n        if(postId === ''){\r\n            postId = ReactDOM.findDOMNode(e.target).parentNode.parentNode.id\r\n        }\r\n\r\n        DelPost(postId)\r\n        .then(()=>{ refresh() });\r\n    }\r\n\r\n    const handleClickLike = (e) =>{\r\n        e.preventDefault();\r\n        let postId = String(e.target.parentNode.id).substring(5);\r\n        LikePost(postId,1)\r\n        .then(()=>{ refresh() });\r\n    }\r\n\r\n    const handleClickDislike = (e) =>{\r\n        e.preventDefault();\r\n        let postId = String(e.target.parentNode.id).substring(8);\r\n        console.log(postId);\r\n        LikePost(postId,-1)\r\n        .then(()=>{ refresh() });\r\n    }\r\n\r\n    const refresh = () => {\r\n        setChange(!change);\r\n    }\r\n\r\n    const formatContent = (text) =>{\r\n        const tab = text.split(' ');\r\n        let content = [];\r\n        console.log(tab);\r\n        let string = '';\r\n        for(let i = 0; i < tab.length; i++){\r\n            if(tab[i].startsWith(':') && tab[i].endsWith(':')){\r\n                content.push((<p>{string}</p>));\r\n                string = '';\r\n                content.push((<img src={tab[i].substring(1,tab[i].length-1)}></img>));\r\n            }\r\n            else if(tab[i].split('.').length > 1){\r\n                content.push((<a href={tab[i]}>{tab[i]}</a>));\r\n            }\r\n            else{\r\n                string += ' '+tab[i];\r\n            }\r\n        }\r\n\r\n        if(string !== ''){\r\n            content.push((<p>{string}</p>));\r\n        }\r\n\r\n        return (<div>\r\n            {content.map((el)=>el)}\r\n        </div>);\r\n    }\r\n\r\n    const sortPost = (posts) =>{\r\n        for(let i = 0; i < posts.length; i++){\r\n            console.log(posts[i]);\r\n        }\r\n    }\r\n\r\n      useEffect(() => {\r\n        console.log(topic.topic);\r\n        GetPosts(topic.topic)\r\n        .then(data => setPosts(data.reverse()))\r\n        .catch((err) => console.log(err)) \r\n      }, [change])\r\n\r\n      useEffect(() => {\r\n        if(posts !== null){\r\n            let authorUserIds = []\r\n            for(let i = 0; i < posts.length; i++){\r\n                if(!(authorUserIds.includes(posts[i].userId))){\r\n                    authorUserIds.push(posts[i].userId);\r\n                }\r\n            }\r\n            authorUserIds.push(sessionStorage.getItem(\"userId\"));\r\n\r\n            SearchProfiles(authorUserIds)\r\n            .then(data => {\r\n                setProfiles(data);\r\n                if(posts.length > 0){\r\n                    setLoad(true);\r\n                }       \r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n    }, [posts])\r\n\r\n    let postsElement = (<div>\"Loading...\"</div>);\r\n\r\n    if(load){\r\n        sortPost(posts);\r\n        let deletePostElement = {};\r\n        deletePostElement[sessionStorage.getItem(\"userId\")] = (<button className='delete-post' onClick={(e) => handleClickDelete(e)}><img className='delete-post-icon' src={Trash} width='10' height='10'></img></button>);\r\n        if(getAccess(sessionStorage.getItem(\"userId\")) === \"admin\"){\r\n            for(let i = 0;i < posts.length; i++){\r\n                deletePostElement[posts[i].userId] = deletePostElement[sessionStorage.getItem(\"userId\")];\r\n            }\r\n        }\r\n        postsElement = (\r\n            <ul>\r\n              {posts.slice(0,iterations).map((post) =>\r\n                <li className='post' key={post.uid}>\r\n                    <div className='post-title'>\r\n                        <div className='post-author'>\r\n                            <div className='post-title-picture-frame'>\r\n                                <img className='post-title-picture' src={profiles[post.userId].pictureUrl}></img>\r\n                            </div>\r\n                            <a onClick={() => handleClickAuthor(post.userId)}>{profiles[post.userId].firstname} {profiles[post.userId].lastname}</a>\r\n                        </div>\r\n                        <div id={post.uid}>\r\n                          {deletePostElement[post.userId]}\r\n                        </div>\r\n                      </div>\r\n                    <div className='post-content'>\r\n                        {formatContent(post.content)}\r\n                  </div>\r\n                  <div className='post-image-frame'>\r\n                        {getImage(post)}\r\n                  </div>\r\n                  <div className='post-reviews'>\r\n                      <div className='post-reviews-row'>\r\n                          <div className='likes-dislikes'>\r\n                              <div className='post-like'>\r\n                                  <a id={'like-'+post.uid} onClick={(e) => handleClickLike(e)} href='#'><img className='like-icon' src={liked[post.usersLiked.includes(sessionStorage.getItem(\"userId\"))]} width=\"20\" height=\"20\"></img></a> <p>{post.likes}</p>\r\n                              </div>\r\n                              <div className='post-dislike'>\r\n                                  <a id={'dislike-'+post.uid} onClick={(e) => handleClickDislike(e)} href='#'><img className='dislike-icon' src={disliked[post.usersDisliked.includes(sessionStorage.getItem(\"userId\"))]} width=\"20\" height=\"20\"></img></a> <p>{post.dislikes}</p>\r\n                              </div>\r\n                          </div>\r\n                          <div className='comments'>\r\n                              <a href='#' className='show-comment'><p onClick={(e) => handleClickComments(post.uid,e)}>comments</p></a>\r\n                          </div>\r\n                      </div>\r\n                      <div className='comments-section' id={'comments-'+post.uid}>\r\n                        <Comments id={post.uid}/>\r\n                      </div>\r\n                  </div>\r\n                </li>)}\r\n            </ul>\r\n            );\r\n    }\r\n\r\n    if(posts !== null){\r\n        if(posts.length === 0){\r\n            postsElement = <h1>No posts yet</h1>\r\n        }\r\n    }\r\n\r\n    let loadElement = (<div></div>);\r\n    if(posts !== null){\r\n        if(iterations < posts.length){\r\n            loadElement = (<div id=\"load-more\" onClick={handleClickLoadMore}>LOAD MORE POSTS</div>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className='posts-padding'>\r\n                <div className='posts-content'>\r\n                    {postsElement}\r\n                </div>\r\n            </div>\r\n            {loadElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst handleClickComments = (postId,e) => {\r\n    e.preventDefault();\r\n    let x = document.getElementById(\"comments-\"+postId);\r\n    if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n    } else {\r\n        x.style.display = \"none\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}