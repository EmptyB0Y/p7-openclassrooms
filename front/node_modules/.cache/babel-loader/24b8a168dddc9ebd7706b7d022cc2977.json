{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LILKETRU\\\\Desktop\\\\openclassrooms\\\\P7\\\\Groupomania\\\\front\\\\src\\\\components\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport like from '../assets/Icons/like.png';\nimport nopic from '../assets/Icons/nopic.webp';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { GetComments, PostComment } from '../services/comments.service';\nimport { SearchProfiles } from '../services/profiles.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = id => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [change, setChange] = useState(false);\n  const [profiles, setProfiles] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    GetComments(id).then(data => {\n      setComments(data);\n      setLoaded(true);\n    }).catch(err => console.log(err));\n  }, []);\n\n  if (loaded) {\n    setLoaded(false);\n    let authorUserIds = [];\n\n    for (let i = 0; i < comments.length; i++) {\n      authorUserIds.push(comments[i].author);\n    }\n\n    SearchProfiles(authorUserIds).then(data => {\n      setProfiles(Object(data));\n      console.log(\"profiles : \");\n      console.log(profiles);\n    }).catch(err => console.log(err));\n  }\n\n  const getFirstname = userId => {\n    for (let i = 0; i < profiles.length; i++) {\n      if (profiles[i].userId === userId) {\n        return profiles[userId].firstname;\n      }\n    }\n  };\n\n  let commentsElement = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"comment-profile-picture\",\n        src: nopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            id: \"comment-author\",\n            children: profiles[comment.author]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, this), \"~\", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n\n  if (change) {\n    setChange(false);\n    setLoaded(true);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"comment-profile-picture\",\n          src: nopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [comment.author, \"~\", comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (comments.length === 0) {\n    commentsElement = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }, this);\n  }\n\n  const refresh = () => {\n    setChange(true);\n    GetComments(id).then(data => {\n      setComments(data);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let text = e.target['input'].value;\n    PostComment(id.id, text).then(() => {\n      refresh();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commments-frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-frame-content\",\n      children: commentsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          handleSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"input\",\n          className: \"add-comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-comment-button\",\n          children: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"BnLXhWMxkBWH01s3oF6aGp6mSE4=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/LILKETRU/Desktop/openclassrooms/P7/Groupomania/front/src/components/Comments.js"],"names":["like","nopic","useState","useEffect","useRef","useCallback","GetComments","PostComment","SearchProfiles","Comments","id","comments","setComments","change","setChange","profiles","setProfiles","loaded","setLoaded","then","data","catch","err","console","log","authorUserIds","i","length","push","author","Object","getFirstname","userId","firstname","commentsElement","map","comment","text","_id","refresh","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import like from '../assets/Icons/like.png'\r\nimport nopic from '../assets/Icons/nopic.webp'\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\nimport {GetComments,PostComment} from '../services/comments.service'\r\nimport {SearchProfiles} from '../services/profiles.service'\r\n\r\nexport const Comments = (id) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [change, setChange] = useState(false);\r\n    const [profiles, setProfiles] = useState({});\r\n    const [loaded,setLoaded] = useState(false);\r\n \r\n    useEffect(() => {\r\n        GetComments(id)\r\n        .then(data => {\r\n            setComments(data);\r\n            setLoaded(true);\r\n        })\r\n        .catch((err) => console.log(err)) \r\n      }, [])\r\n\r\n    if(loaded){\r\n        setLoaded(false);\r\n        let authorUserIds = []\r\n        for(let i = 0; i < comments.length; i++){\r\n            authorUserIds.push(comments[i].author);\r\n        }\r\n\r\n        SearchProfiles(authorUserIds)\r\n        .then(data => {\r\n            setProfiles(Object(data));\r\n            console.log(\"profiles : \");\r\n            console.log(profiles);\r\n        })\r\n        .catch((err) => console.log(err));\r\n          \r\n    }\r\n\r\n    const getFirstname = (userId) =>{\r\n        for(let i = 0; i < profiles.length; i++){\r\n            if(profiles[i].userId === userId){\r\n                return profiles[userId].firstname;\r\n            }\r\n        }\r\n    }\r\n\r\n    let commentsElement = (\r\n        <ul>\r\n        {comments.map((comment) =>\r\n            <li className='comment' key={comment._id}>\r\n                <img className='comment-profile-picture' src={nopic}></img>\r\n                <div>\r\n                    <p><a href='#' id='comment-author'>{profiles[comment.author]}</a>~\r\n                    {comment.text}\r\n                    </p>\r\n                </div>\r\n            </li>)}\r\n        </ul>\r\n        );\r\n\r\n    if(change){\r\n        setChange(false);\r\n        setLoaded(true);\r\n\r\n        return (\r\n        <ul>\r\n        {comments.map((comment) =>\r\n            <li className='comment' key={comment._id}>\r\n                <img className='comment-profile-picture' src={nopic}></img>\r\n                <div>\r\n                    <p>{comment.author}~\r\n                    {comment.text}\r\n                    </p>\r\n                </div>\r\n            </li>)}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    if(comments.length === 0){\r\n        commentsElement = (<p>No comments yet...</p>);\r\n    }\r\n    const refresh = () => {\r\n        setChange(true);\r\n        GetComments(id).then((data) =>{\r\n            setComments(data);\r\n        });\r\n      }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let text = e.target['input'].value; \r\n        PostComment(id.id,text)\r\n        .then(() => { refresh()});\r\n    }\r\n\r\n    return (\r\n    <div className='commments-frame'>\r\n        <div className='comments-frame-content'>\r\n            {commentsElement}\r\n        </div>\r\n        <div className='add-comment'>\r\n            <form onSubmit={(e) => {handleSubmit(e)}}>\r\n                <input name='input' className='add-comment-input'></input>\r\n                <button className='add-comment-button'>post</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}